#
# Initialize Elastic with a schema and with an ingest pipeline for our API logs
#
apiVersion: batch/v1
kind: Job
metadata:
  name: es-initdata-job
spec:
  #parallelism: 1
  #completions: 1
  template:
    metadata:
      name: es-initdata-job
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-elasticearch
          image: alpine
          command:
            [
            # use curl to check status and also do echo output and keep running
              "sh",
              "-c",
              "for i in $(seq 1 300); do nc -zvw1 es-es-http 9200 && exit 0 || sleep 3; done; exit 1",
            ]
      containers:
        - name: es-initdata-job
          image: appropriate/curl
          env:
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: es-es-elastic-user
                  key: elastic
          command:
            - /bin/sh
            - -c
            - |
              curl -v -k -u elastic:$ELASTICSEARCH_PASSWORD -X PUT https://es-es-http:9200/_ilm/policy/logstash-ilm-policy?pretty -H 'Content-Type: application/json' -d '
              {
                "policy": {
                  "phases": {
                    "hot": {
                      "actions": {
                        "rollover": {
                          "max_age": "3d"
                        }
                      }
                    },
                    "delete": {
                      "min_age": "0s",
                      "actions": {
                        "delete": {}
                      }
                    }
                  }
                }
              }
              '
              curl -v -k -u elastic:$ELASTICSEARCH_PASSWORD -X PUT https://es-es-http:9200/_template/logstash_index_template?pretty -H 'Content-Type: application/json' -d '
              {
                "index_patterns": ["logstash-*"],
                "settings": {
                  "number_of_shards": 1,
                  "number_of_replicas": 1,
                  "index.lifecycle.name": "logstash-ilm-policy",
                  "index.lifecycle.rollover_alias": "logstash"
                }
              }
              '
